from aiogram import Bot, Dispatcher, types, Router, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from config import BOT_TOKEN
import asyncio
import logging
import datetime

from database import save_user, get_user_data

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

bot = Bot(token=BOT_TOKEN)
router = Router()

def get_main_menu():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile")],
            [InlineKeyboardButton(text="‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="update")],
            [InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")]
        ]
    )

def get_commands_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="/start"), KeyboardButton(text="/help")],
            [KeyboardButton(text="/profile"), KeyboardButton(text="/update")]
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É..."
    )

async def check_user_profile(user_id: int) -> bool:
    return get_user_data(user_id) is not None

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if not await check_user_profile(message.from_user.id):
        await message.answer(
            f"üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FitnessBot!</b>\n\n"
            f"üìÖ –°–µ–≥–æ–¥–Ω—è: {datetime.datetime.now().strftime('%d.%m.%Y')}\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å.\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "<b>–ò–º—è / –†–æ—Å—Ç / –í–µ—Å / –í–æ–∑—Ä–∞—Å—Ç / –¶–µ–ª—å</b>\n\n"
            "–ü—Ä–∏–º–µ—Ä: <code>–ê–ª–µ–∫—Å–∞–Ω–¥—Ä / 180 / 75 / 30 / –ø–æ—Ö—É–¥–µ–Ω–∏–µ</code>",
            reply_markup=get_commands_keyboard(),
            parse_mode="HTML"
        )
    else:
        user_data = get_user_data(message.from_user.id)
        await message.answer(
            f"üîÑ <b>–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω</b> üîÑ\n\n"
            f"üë§ –í–∞—à–µ –∏–º—è: {user_data['name']}\n"
            f"üìÖ –°–µ–≥–æ–¥–Ω—è: {datetime.datetime.now().strftime('%d.%m.%Y')}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_main_menu(),
            parse_mode="HTML"
        )

@router.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer(
        "‚ÑπÔ∏è <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b> ‚ÑπÔ∏è\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/profile - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n"
        "/update - –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ üëá",
        reply_markup=get_commands_keyboard(),
        parse_mode="HTML"
    )

@router.callback_query(F.data == "help")
async def callback_help(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "‚ÑπÔ∏è <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b> ‚ÑπÔ∏è\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n\n"
        "‚Ä¢ <b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö\n"
        "‚Ä¢ <b>–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</b> - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n\n"
        "–î–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç:\n"
        "<code>–ò–º—è / –†–æ—Å—Ç / –í–µ—Å / –í–æ–∑—Ä–∞—Å—Ç / –¶–µ–ª—å</code>",
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )
    await callback.answer()

@router.message(F.text == "–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã")
async def show_commands(message: types.Message):
    await cmd_help(message)

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (profile, update, handle_profile_data) –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
# ...

async def main():
    dp = Dispatcher()
    dp.include_router(router)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
    await bot.send_message(
        chat_id=ADMIN_CHAT_ID,  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat_id
        text="ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!\n"
             f"‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.datetime.now().strftime('%d.%m.%Y %H:%M:%S')}"
    )
    
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())